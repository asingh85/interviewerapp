buildscript {

    ext {
        springBootVersion = '2.0.2.RELEASE'
        junitVersion = '5.1.1'
    }

    repositories {
            mavenCentral()
    }

    dependencies {
        classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath ('org.junit.platform:junit-platform-gradle-plugin:1.1.0')
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}


apply plugin: 'java'
apply plugin: "org.springframework.boot"
apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'

group = 'com.softvision.interview'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
    springCloudVersion = 'Finchley.RELEASE'
}

dependencies {
    // for mongo DB
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    // for jersey
    compile("org.springframework.boot:spring-boot-starter-jersey:${springBootVersion}")
    // spring web
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}"){
        exclude(module: 'thymeleaf-spring5')
    }
    // for spring aop
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")

    // for lambok
    compile("org.projectlombok:lombok:1.16.16")

    // for email service
    compile("org.springframework.boot:spring-boot-starter-mail:${springBootVersion}")
    compile("org.apache.commons:commons-lang3:3.1")
    compile("com.googlecode.json-simple:json-simple:1.1")
    compile("org.apache.commons:commons-io:1.3.2")
    compile('org.thymeleaf:thymeleaf-spring5:3.0.9.RELEASE'){
        exclude(module: 'thymeleaf')
    }
    compile('org.thymeleaf:thymeleaf:3.0.9.RELEASE')
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")

    // actuator , data rest and netfliex is used of Eureka
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')


    compile('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile(group: 'javax.persistence', name: 'javax.persistence-api', version:'2.2') {
        exclude(module: 'hibernate-validator')
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}